version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true # Auto-create topics for simplicity
    depends_on:
      - zookeeper

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Rod # CHANGE THIS to a strong password
    volumes:
      - sqlserver_data:/var/opt/mssql # Persist data

  producer:
    build:
      context: . # Build from the current directory
      dockerfile: Dockerfile.producer # Use your producer Dockerfile
    environment:
      - KAFKA_BROKER=kafka:9092 # Use the service name
      - API_URL=https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd
    depends_on:
      - kafka

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer # Use your consumer Dockerfile
    environment:
      - KAFKA_BROKER=kafka:9092
      - SQL_SERVER=sqlserver
      - SQL_DATABASE=master
      - SQL_USERNAME=sa
      - SQL_PASSWORD=YourStrongPassword! # CHANGE THIS!
    depends_on:
      - kafka
      - sqlserver # Consumer needs both Kafka and SQL Server

  # Optional: Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

volumes:
  sqlserver_data:
    driver: local